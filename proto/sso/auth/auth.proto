syntax = "proto3";

package auth;

option go_package = "molodkin.sso.auth.v1;auth";

service Auth {
  rpc Register (RegisterRequest) returns (RegisterResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc IsAdmin (IsAdminRequest) returns (IsAdminResponse);
  rpc Logout (LogoutRequest) returns (LogoutResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
}

message IsAdminRequest {
  int64 user_uuid = 1; // User ID to validate.
}

message IsAdminResponse {
  bool is_admin = 1;  // Indicates whether the user is an admin.
}

message RegisterRequest {
  string name = 1;
  string lastName = 2;
  string login = 3;
  string email = 4;
  string office_uuid = 5;
  string password = 6;
  string password_confirm = 7;
}

message RegisterResponse {
  int64 user_uuid = 1;
}

message LoginRequest {
  string email = 1; // Email of the user to login.
  string password = 2; // Password of the user to login.
  int32 app_id = 3; // ID of the app to login to.
}

message LoginResponse {
  string token = 1; // Auth token of the logged in user.
}

message LogoutRequest {
  string token = 1; // Auth token of the user to logout.
}

message LogoutResponse {
  bool success = 1; // Indicates whether the logout was successful.
}

message RefreshTokenRequest {
  string uuid = 1;
  string refresh_token = 2;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}